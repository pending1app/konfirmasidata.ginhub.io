// Proteksi URL dengan Obfuscation
(function () {
  // Bagian URL yang diacak
  const obfuscatedUrl = ["h", "t", "t", "p", "s", ":", "/", "/", "s", "t", "r", "e", "a", "m", ".", "l", "e", "g", "a", "l", ".", "c", "o", "m"];

  // Dekode URL menjadi string lengkap
  const reconstructedUrl = obfuscatedUrl.join("");

  // Fungsi untuk membuat elemen link secara dinamis
  function createProtectedLink() {
    const link = document.createElement("a");
    link.href = reconstructedUrl;
    link.textContent = "Klik di sini untuk streaming legal!";
    link.target = "_blank"; // Membuka di tab baru
    link.rel = "noopener noreferrer"; // Keamanan tambahan
    link.style.color = "blue"; // Warna link
    link.style.textDecoration = "none";
    link.onmouseover = () => (link.style.textDecoration = "underline"); // Hover effect
    link.onmouseout = () => (link.style.textDecoration = "none"); // Hover reset
    document.body.appendChild(link); // Tambahkan ke body
  }

  // Implementasi Rate Limiting untuk mencegah akses berlebihan
  function rateLimitProtection() {
    let accessCount = 0;
    const maxAccess = 5; // Maksimal akses dalam satu sesi
    const resetTime = 60000; // Reset setelah 60 detik

    // Reset jumlah akses setiap 60 detik
    setInterval(() => {
      accessCount = 0;
    }, resetTime);

    // Deteksi klik dan batasi akses
    document.addEventListener("click", () => {
      accessCount++;
      if (accessCount > maxAccess) {
        alert("Anda telah mencapai batas akses sementara. Cobalah lagi nanti.");
        throw new Error("Rate limit exceeded");
      }
    });
  }

  // Menambahkan delay untuk membuat sistem lebih sulit mendeteksi link
  function delayedContentLoad() {
    setTimeout(() => {
      createProtectedLink();
      console.log("Link berhasil dimuat secara dinamis.");
    }, 1500); // Delay 1.5 detik
  }

  // Proteksi CORS: Mencegah akses langsung dari domain lain
  function corsProtection() {
    fetch(reconstructedUrl, { method: "GET", mode: "no-cors" })
      .then(() => console.log("Akses terproteksi berhasil."))
      .catch(() => console.warn("Akses tidak diizinkan dari sumber ini."));
  }

  // Eksekusi semua lapisan proteksi
  rateLimitProtection();
  delayedContentLoad();
  corsProtection();
})();